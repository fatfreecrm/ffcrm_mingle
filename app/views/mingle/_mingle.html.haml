%li.task[mingle]{ highlightable(dom_id(mingle, :tools)) }
  - if mingle.respond_to?(:status) and mingle.status.present?
    .strip{:class => 'meeting'}= mingle.status
  - else
    .strip.white #{t :other}

  .tools{ invisible, :id => dom_id(mingle, :tools) }
    =# link_to_edit(mingle) + " | "
    =# link_to_delete(mingle)

  .indent
    - if mingle.respond_to?(:owner) and (owner = User.find_by_username(mingle.owner))
      = link_to(owner.full_name, user_path(owner))

    %tt
      - url = "#{mingle.class.site.to_s.gsub('/api/v2', '').sub(/\/$/, '')}/cards/#{mingle.number}"
      = link_to("##{mingle.number}: #{mingle.name}", url, :target => :_blank)
      - Mingle.fields.reject {|f| %w(number name status owner).include?(f.downcase)}.map do |field|
        %span><
          = ", #{field.titleize}:"
        %strong
          = mingle.send(field.downcase.gsub(' ', '_'))
